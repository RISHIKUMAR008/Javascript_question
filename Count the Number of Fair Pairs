function countFairPairs(nums, lower, upper) {
  nums.sort((a, b) => a - b);
  let count = 0;
  const n = nums.length;

  for (let i = 0; i < n; i++) {
    let low = lower - nums[i];
    let high = upper - nums[i];

    let left = lowerBound(nums, low, i + 1);
    let right = upperBound(nums, high, i + 1);
    
    count += right - left;
  }

  return count;
}

function lowerBound(arr, target, start) {
  let l = start, r = arr.length;
  while (l < r) {
    let m = Math.floor((l + r) / 2);
    if (arr[m] < target) l = m + 1;
    else r = m;
  }
  return l;
}

function upperBound(arr, target, start) {
  let l = start, r = arr.length;
  while (l < r) {
    let m = Math.floor((l + r) / 2);
    if (arr[m] <= target) l = m + 1;
    else r = m;
  }
  return l;
}
