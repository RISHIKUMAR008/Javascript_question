Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.

 

Example 1:

Input: nums = [3,2,1]
Output: 1
Explanation:
The first distinct maximum is 3.
The second distinct maximum is 2.
The third distinct maximum is 1.
Example 2:
Input: nums = [1,2]
Output: 2
Explanation:
The first distinct maximum is 2.
The second distinct maximum is 1.
The third distinct maximum does not exist, so the maximum (2) is returned instead.



function thirdMax(nums) {
    let max1 = null, max2 = null, max3 = null;

    for (let num of nums) {
        if (num === max1 || num === max2 || num === max3) {
            continue; // Skip duplicates
        }

        if (max1 === null || num > max1) {
            max3 = max2;
            max2 = max1;
            max1 = num; // Update max1
        } else if (max2 === null || num > max2) {
            max3 = max2;
            max2 = num; // Update max2
        } else if (max3 === null || num > max3) {
            max3 = num; // Update max3
        }
    }

    // Return max3 if it exists, otherwise return max1
    return max3 === null ? max1 : max3;
}

// Example usage:
const nums = [3, 2, 1];
console.log(thirdMax(nums)); // Output: 1
