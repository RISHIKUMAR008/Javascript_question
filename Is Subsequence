Given two strings s and t, return true if s is a subsequence of t, or false otherwise.

A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

Example 1:

Input: s = "abc", t = "ahbgdc"
Output: true
Example 2:

Input: s = "axc", t = "ahbgdc"
Output: false




function isSubsequence(s, t) {
    let i = 0, j = 0;
    
    while (i < s.length && j < t.length) {
        if (s[i] === t[j]) {
            i++; // Move to the next character in s
        }
        j++; // Always move to the next character in t
    }
    
    return i === s.length;
}

// Test cases
console.log(isSubsequence("abc", "ahbgdc")); // true
console.log(isSubsequence("axc", "ahbgdc")); // false
console.log(isSubsequence("", "ahbgdc")); // true (empty string is always a subsequence)
console.log(isSubsequence("b", "abc")); // true
console.log(isSubsequence("acb", "ahbgdc")); // false (relative order matters)
