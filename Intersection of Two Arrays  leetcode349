Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [9,4]
Explanation: [4,9] is also accepted.







function intersection(nums1, nums2) {
    const result = [];

    for (let i = 0; i < nums1.length; i++) {
        let isInNums2 = false;
        let isAlreadyInResult = false;

        // Check if nums1[i] is in nums2
        for (let j = 0; j < nums2.length; j++) {
            if (nums1[i] === nums2[j]) {
                isInNums2 = true;
                break;
            }
        }

        // Check if nums1[i] is already in the result
        for (let k = 0; k < result.length; k++) {
            if (nums1[i] === result[k]) {
                isAlreadyInResult = true;
                break;
            }
        }

        // If nums1[i] is in nums2 and not already in the result, add it
        if (isInNums2 && !isAlreadyInResult) {
            result.push(nums1[i]);
        }
    }

    return result;
}

// Example usage:
const nums1 = [1, 2, 2, 1];
const nums2 = [2, 2];
console.log(intersection(nums1, nums2)); // Output: [2]

const nums3 = [4, 9, 5];
const nums4 = [9, 4, 9, 8, 4];
console.log(intersection(nums3, nums4)); // Output: [4, 9] (or [9, 4])
